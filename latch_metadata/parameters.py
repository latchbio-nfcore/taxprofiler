
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'input': NextflowParameter(
        type=LatchFile,
        default=None,
        section_title='Input/output options',
        description='Path to comma-separated file containing information about the samples and libraries/runs.',
    ),
    'databases': NextflowParameter(
        type=LatchFile,
        default=None,
        section_title=None,
        description='Path to comma-separated file containing information about databases and profiling parameters for each taxonomic profiler',
    ),
    'save_untarred_databases': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify to save decompressed user-supplied TAR archives of databases',
    ),
    'outdir': NextflowParameter(
        type=typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.',
    ),
    'email': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Email address for completion summary.',
    ),
    'multiqc_title': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='MultiQC report title. Printed as page header, used for filename if not otherwise specified.',
    ),
    'skip_preprocessing_qc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Preprocessing general QC options',
        description='Specify to skip sequencing quality control of raw sequencing reads',
    ),
    'preprocessing_qc_tool': NextflowParameter(
        type=typing.Optional[str],
        default='fastqc',
        section_title=None,
        description='Specify the tool used for quality control of raw sequencing reads',
    ),
    'save_preprocessed_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save reads from samples that went through the adapter clipping, pair-merging, and length filtering steps for both short and long reads',
    ),
    'save_analysis_ready_fastqs': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save only the final reads from all read processing steps (that are sent to classification/profiling) in results directory.',
    ),
    'perform_shortread_qc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Preprocessing short-read QC options',
        description='Turns on short read quality control steps (adapter clipping, complexity filtering etc.)',
    ),
    'shortread_qc_tool': NextflowParameter(
        type=typing.Optional[str],
        default='fastp',
        section_title=None,
        description='Specify which tool to use for short-read QC',
    ),
    'shortread_qc_skipadaptertrim': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip adapter trimming',
    ),
    'shortread_qc_adapter1': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify adapter 1 nucleotide sequence',
    ),
    'shortread_qc_adapter2': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify adapter 2 nucleotide sequence',
    ),
    'shortread_qc_adapterlist': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify a list of all possible adapters to trim. Overrides --shortread_qc_adapter1/2. Formats: .txt (AdapterRemoval) or .fasta. (fastp).',
    ),
    'shortread_qc_mergepairs': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on merging of read pairs for paired-end data',
    ),
    'shortread_qc_includeunmerged': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Include unmerged reads from paired-end merging in the downstream analysis',
    ),
    'shortread_qc_minlength': NextflowParameter(
        type=typing.Optional[int],
        default=15,
        section_title=None,
        description='Specify the minimum length of reads to be retained',
    ),
    'shortread_qc_dedup': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Perform deduplication of the input reads (fastp only)',
    ),
    'perform_shortread_complexityfilter': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turns on nucleotide sequence complexity filtering',
    ),
    'shortread_complexityfilter_tool': NextflowParameter(
        type=typing.Optional[str],
        default='bbduk',
        section_title=None,
        description='Specify which tool to use for complexity filtering',
    ),
    'shortread_complexityfilter_entropy': NextflowParameter(
        type=typing.Optional[float],
        default=0.3,
        section_title=None,
        description='Specify the minimum sequence entropy level for complexity filtering',
    ),
    'shortread_complexityfilter_bbduk_windowsize': NextflowParameter(
        type=typing.Optional[int],
        default=50,
        section_title=None,
        description='Specify the window size for BBDuk complexity filtering',
    ),
    'shortread_complexityfilter_bbduk_mask': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on masking rather than discarding of low complexity reads for BBduk',
    ),
    'shortread_complexityfilter_fastp_threshold': NextflowParameter(
        type=typing.Optional[int],
        default=30,
        section_title=None,
        description='Specify the minimum complexity filter threshold of fastp',
    ),
    'shortread_complexityfilter_prinseqplusplus_mode': NextflowParameter(
        type=typing.Optional[str],
        default='entropy',
        section_title=None,
        description='Specify the complexity filter mode for PRINSEQ++',
    ),
    'shortread_complexityfilter_prinseqplusplus_dustscore': NextflowParameter(
        type=typing.Optional[float],
        default=0.5,
        section_title=None,
        description='Specify the minimum dust score for PRINTSEQ++ complexity filtering',
    ),
    'save_complexityfiltered_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save reads from samples that went through the complexity filtering step',
    ),
    'perform_longread_qc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Preprocessing long-read QC options',
        description='Turns on long read quality control steps (adapter clipping, length filtering etc.)',
    ),
    'longread_qc_skipadaptertrim': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip long-read trimming',
    ),
    'longread_qc_skipqualityfilter': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip long-read length and quality filtering',
    ),
    'longread_qc_qualityfilter_minlength': NextflowParameter(
        type=typing.Optional[int],
        default=1000,
        section_title=None,
        description='Specify the minimum length of reads to be retained',
    ),
    'longread_qc_qualityfilter_keeppercent': NextflowParameter(
        type=typing.Optional[int],
        default=90,
        section_title=None,
        description='Specify the percent of high-quality bases to be retained',
    ),
    'longread_qc_qualityfilter_targetbases': NextflowParameter(
        type=typing.Optional[int],
        default=500000000,
        section_title=None,
        description='Specify the number of high-quality bases in the library to be retained',
    ),
    'perform_shortread_hostremoval': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Preprocessing host removal options',
        description='Turn on short-read host removal',
    ),
    'perform_longread_hostremoval': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on long-read host removal',
    ),
    'hostremoval_reference': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify path to single reference FASTA of host(s) genome(s)',
    ),
    'shortread_hostremoval_index': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify path to the directory containing pre-made BowTie2 indexes of the host removal reference',
    ),
    'longread_hostremoval_index': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify path to a pre-made Minimap2 index file (.mmi) of the host removal reference',
    ),
    'save_hostremoval_index': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save mapping index of input reference when not already supplied by user',
    ),
    'save_hostremoval_bam': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Saved mapped and unmapped reads in BAM format from host removal',
    ),
    'save_hostremoval_unmapped': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save reads from samples that went through the host-removal step',
    ),
    'perform_runmerging': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Preprocessing run merging options',
        description='Turn on run merging',
    ),
    'save_runmerged_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save reads from samples that went through the run-merging step',
    ),
    'run_centrifuge': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Profiling options',
        description='Turn on profiling with Centrifuge. Requires database to be present CSV file passed to --databases',
    ),
    'centrifuge_save_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of Centrifuge-aligned reads',
    ),
    'run_diamond': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with DIAMOND. Requires database to be present CSV file passed to --databases',
    ),
    'diamond_output_format': NextflowParameter(
        type=typing.Optional[str],
        default='tsv',
        section_title=None,
        description='Specify output format from DIAMOND profiling.',
    ),
    'diamond_save_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of DIAMOND-aligned reads. Will override --diamond_output_format and no taxon tables will be generated',
    ),
    'run_kaiju': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with Kaiju. Requires database to be present CSV file passed to --databases',
    ),
    'kaiju_expand_viruses': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on expanding of virus hits to individual viruses rather than aggregating at a taxonomic level.',
    ),
    'kaiju_taxon_rank': NextflowParameter(
        type=typing.Optional[str],
        default='species',
        section_title=None,
        description='Specify taxonomic rank to be displayed in Kaiju taxon table',
    ),
    'run_kraken2': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with Kraken2. Requires database to be present CSV file passed to --databases',
    ),
    'kraken2_save_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of Kraken2-aligned reads',
    ),
    'kraken2_save_readclassifications': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of Kraken2 per-read taxonomic assignment file',
    ),
    'kraken2_save_minimizers': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving minimizer information in the kraken2 report thus increasing to an eight column layout.',
    ),
    'run_krakenuniq': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with KrakenUniq. Requires one or more KrakenUniq databases to be present in the CSV file passed to --databases.',
    ),
    'krakenuniq_save_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of KrakenUniq (un-)classified reads as FASTA.',
    ),
    'krakenuniq_ram_chunk_size': NextflowParameter(
        type=typing.Optional[str],
        default='16G',
        section_title=None,
        description='Specify how large to chunk the database when loading into memory for KrakenUniq.',
    ),
    'krakenuniq_save_readclassifications': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of KrakenUniq per-read taxonomic assignment file.',
    ),
    'krakenuniq_batch_size': NextflowParameter(
        type=typing.Optional[int],
        default=20,
        section_title=None,
        description='Specify the number of samples for each KrakenUniq run.',
    ),
    'run_bracken': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on Bracken (and the required Kraken2 prerequisite step).',
    ),
    'run_malt': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with MALT. Requires database to be present CSV file passed to --databases',
    ),
    'malt_mode': NextflowParameter(
        type=typing.Optional[str],
        default='BlastN',
        section_title=None,
        description='Specify which MALT alignment mode to use',
    ),
    'malt_save_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of MALT-aligned reads',
    ),
    'malt_generate_megansummary': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on generation of MEGAN summary file from MALT results',
    ),
    'run_metaphlan': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with MetaPhlAn. Requires database to be present CSV file passed to --databases',
    ),
    'run_motus': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with mOTUs. Requires database to be present CSV file passed to --databases',
    ),
    'motus_use_relative_abundance': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on printing relative abundance instead of counts.',
    ),
    'motus_save_mgc_read_counts': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving the mgc reads count.',
    ),
    'motus_remove_ncbi_ids': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on removing NCBI taxonomic IDs.',
    ),
    'run_kmcp': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on classification with KMCP.',
    ),
    'kmcp_mode': NextflowParameter(
        type=typing.Optional[int],
        default=3,
        section_title=None,
        description='Specify which KMCP profiling mode to use.',
    ),
    'kmcp_save_search': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving the output of KMCP search',
    ),
    'run_ganon': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on profiling with ganon. Requires database to be present CSV file passed to --databases.',
    ),
    'ganon_save_readclassifications': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on saving of ganon per-read taxonomic assignment file(s).',
    ),
    'ganon_report_type': NextflowParameter(
        type=typing.Optional[str],
        default='reads',
        section_title=None,
        description='Specify the type of ganon report to save.',
    ),
    'ganon_report_rank': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify the taxonomic report the ganon report file should display.',
    ),
    'ganon_report_toppercentile': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Specify a percentile within which hits will be reported in ganon report output..',
    ),
    'ganon_report_mincount': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Specify a minimum number of reads a hit must have to be retained in the ganon report.',
    ),
    'ganon_report_maxcount': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Specify a maximum number of reads a hit must have to be retained in the ganon report.',
    ),
    'run_profile_standardisation': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Postprocessing and visualisation options',
        description='Turn on standardisation of taxon tables across profilers',
    ),
    'standardisation_motus_generatebiom': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on generation of BIOM output (currently only applies to mOTUs)',
    ),
    'run_krona': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on generation of Krona plots for supported profilers',
    ),
    'krona_taxonomy_directory': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify path to krona taxonomy directories (required for MALT krona plots)',
    ),
    'standardisation_taxpasta_format': NextflowParameter(
        type=typing.Optional[str],
        default='tsv',
        section_title=None,
        description='The desired output format.',
    ),
    'taxpasta_taxonomy_dir': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='The path to a directory containing taxdump files.',
    ),
    'taxpasta_add_name': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Add the taxon name to the output.',
    ),
    'taxpasta_add_rank': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Add the taxon rank to the output.',
    ),
    'taxpasta_add_lineage': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Add the taxon's entire name lineage to the output.",
    ),
    'taxpasta_add_idlineage': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Add the taxon's entire ID lineage to the output.",
    ),
    'taxpasta_add_ranklineage': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Add the taxon's entire rank lineage to the output.",
    ),
    'taxpasta_ignore_errors': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Ignore individual profiles that cause errors.',
    ),
    'multiqc_methods_description': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Generic options',
        description='Custom MultiQC yaml file containing HTML including a methods description.',
    ),
}

